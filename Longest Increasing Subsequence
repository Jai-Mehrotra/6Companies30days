class Solution {
    public int f(int ind, int prev, int arr[],int n,int dp[][])
    {
        if(ind==n)
        return 0;
        if(dp[ind][prev+1]!=-1)
        return dp[ind][prev+1];

        int not=0+f(ind+1,prev,arr,n,dp);
        int take=0;
        if(prev==-1|| arr[prev]<arr[ind])
        take=1+f(ind+1,ind,arr,n,dp);
        return dp[ind][prev+1]=Math.max(take,not);
    }
    public int lengthOfLIS(int[] nums) {
        int n=nums.length;
        int dp[][]=new int[n][n+1];
        for(int row[]:dp)
        {
            Arrays.fill(row,-1);
        }
        int j= f(0,-1,nums,nums.length,dp);
        return j;
    }
}
